{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/course/course.component.ts","webpack:///src/app/components/course/course.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/links-bar/links-bar.component.ts","webpack:///src/app/components/links-bar/links-bar.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/main-view-item-description-calculate-road/main-view-item-description-calculate-road.component.ts","webpack:///src/app/components/main-view-item-description-calculate-road/main-view-item-description-calculate-road.component.html","webpack:///src/app/components/main-view-item-image/main-view-item-image.component.ts","webpack:///src/app/components/main-view-item-image/main-view-item-image.component.html","webpack:///src/app/components/main-view-item-text/main-view-item-text.component.ts","webpack:///src/app/components/main-view-item-text/main-view-item-text.component.html","webpack:///src/app/components/main-view/main-view.component.ts","webpack:///src/app/components/main-view/main-view.component.html","webpack:///src/app/components/map-view/map-view.component.ts","webpack:///src/app/components/map-view/map-view.component.html","webpack:///src/app/components/map/map.component.ts","webpack:///src/app/components/map/map.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/signup/signup.component.ts","webpack:///src/app/components/signup/signup.component.html","webpack:///src/app/components/user-courses/user-courses.component.ts","webpack:///src/app/components/user-courses/user-courses.component.html","webpack:///src/app/directives/directions-map.directive.ts","webpack:///src/app/services/auth-not-login.guard.ts","webpack:///src/app/services/auth.interceptor.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","apiKey","libraries","declarations","entryComponents","providers","bootstrap","CourseComponent","dataService","router","displayDirections","origin","history","state","data","dest","course","calculateDistanceAndTime","price","createOrUpdate","subscribe","value","navigate","r","directionsService","google","maps","DirectionsService","funn","calculatePrice","route","lat","lng","destination","waypoints","optimizeWaypoints","travelMode","response","status","f","directionsData","legs","document","getElementById","innerHTML","duration","text","distance","distArr","innerText","split","Number","parseFloat","replace","saveCourse","FooterComponent","HomeComponent","LinksBarComponent","faFacebook","faTwitter","faEnvelope","faInstagram","LoginComponent","authService","formGroup","login","password","authenticate","respond","location","reload","style","display","onSubmit","MainViewItemDescriptionCalculateRoadComponent","MainViewItemImageComponent","MainViewItemTextComponent","MainViewComponent","faCar","faDollarSign","faRoute","getAllCoursesByUser","isLoggedIn","getLogin","getByUser","MapViewComponent","MapComponent","authNotLoginGuard","markerEvent","adres_poczatkowy","adres_koncowy","default_adres","fromInput","destInput","setCurrentPosition","userName","selectedCourse","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","$event","formatted_address","onLocationSelected","onAutocompleteSelected","onDestinationLocationSelected","onAutocompleteDestinationSelected","NavbarComponent","dialog","open","height","width","logout","SignupComponent","email","repeatedPassword","name","error","undefined","color","setTimeout","UserCoursesComponent","user","getAll","setCourses","max","courses","reverse","isMoreThan20","length","i","pop","DirectionsMapDirective","gmapsApi","drawDirectionsRoute","getNativeMap","map","directionsRenderer","DirectionsRenderer","suppressMarkers","showDirection","setMap","console","log","changes","currentValue","setDirections","AuthNotLoginGuard","providedIn","AuthInterceptor","injector","request","next","auth","get","clone","setHeaders","getToken","handle","AuthService","http","url","credentials","post","pipe","result","token","localStorage","setItem","currentUser","userId","removeItem","jwtHelper","getItem","isTokenExpired","decodeToken","DataService","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {HomeComponent} from './components/home/home.component';\r\nimport {CourseComponent} from \"./components/course/course.component\";\r\nimport {AuthNotLoginGuard} from \"./services/auth-not-login.guard\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    path: 'course',\r\n    component: CourseComponent,\r\n    canActivate: [AuthNotLoginGuard],\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'uber';\r\n}\r\n","<navbar></navbar>\r\n<router-outlet></router-outlet>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {NavbarComponent} from './components/navbar/navbar.component';\r\nimport {HomeComponent} from './components/home/home.component';\r\nimport {SignupComponent} from './components/signup/signup.component';\r\nimport {LoginComponent} from './components/login/login.component';\r\nimport {MainViewComponent} from './components/main-view/main-view.component';\r\nimport {MainViewItemTextComponent} from './components/main-view-item-text/main-view-item-text.component';\r\nimport {MainViewItemImageComponent} from './components/main-view-item-image/main-view-item-image.component';\r\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\r\nimport {FooterComponent} from './components/footer/footer.component';\r\nimport {MainViewItemDescriptionCalculateRoadComponent} from './components/main-view-item-description-calculate-road/main-view-item-description-calculate-road.component';\r\nimport {AgmCoreModule} from '@agm/core';\r\nimport {environment} from '../environments/environment';\r\nimport {MapComponent} from './components/map/map.component';\r\nimport {MatGoogleMapsAutocompleteModule} from '@angular-material-extensions/google-maps-autocomplete';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {DirectionsMapDirective} from './directives/directions-map.directive';\r\nimport {MapViewComponent} from './components/map-view/map-view.component';\r\nimport {AgmDirectionModule} from 'agm-direction';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {CourseComponent} from './components/course/course.component';\r\nimport {LinksBarComponent} from './components/links-bar/links-bar.component';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {AuthInterceptor} from './services/auth.interceptor';\r\nimport { UserCoursesComponent } from './components/user-courses/user-courses.component';\r\nimport {MatDialogModule} from \"@angular/material/dialog\";\r\nimport {MatSelectModule} from \"@angular/material/select\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    MainViewComponent,\r\n    MainViewItemTextComponent,\r\n    MainViewItemImageComponent,\r\n    FooterComponent,\r\n    MainViewItemDescriptionCalculateRoadComponent,\r\n    MapComponent,\r\n    DirectionsMapDirective,\r\n    MapViewComponent,\r\n    CourseComponent,\r\n    LinksBarComponent,\r\n    UserCoursesComponent,\r\n\r\n  ],\r\n  entryComponents: [LoginComponent, SignupComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FontAwesomeModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: environment.apiKey,\r\n      libraries: ['places', 'directions']\r\n    }),\r\n    AgmDirectionModule,\r\n    MatGoogleMapsAutocompleteModule,\r\n    FlexLayoutModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    MatSelectModule\r\n  ],\r\n  providers: [{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true\r\n  },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Course, DataService} from '../../services/data.service';\r\nimport {Router} from '@angular/router';\r\n\r\n\r\ntype Fun = () => any;\r\ndeclare var google: any;\r\n@Component({\r\n  selector: 'app-course',\r\n  templateUrl: './course.component.html',\r\n  styleUrls: ['./course.component.css']\r\n})\r\nexport class CourseComponent implements OnInit {\r\n  origin;\r\n  dest;\r\n  displayDirections = true;\r\n  data;\r\n  course: Course\r\n\r\n  constructor(private dataService: DataService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.origin = history.state.data.origin;\r\n    this.dest = history.state.data.dest;\r\n    this.course = history.state.data.course\r\n    this.calculateDistanceAndTime();\r\n    this.course.price = 5;\r\n\r\n  }\r\n\r\n  saveCourse(): void {\r\n    this.dataService.createOrUpdate(this.course).subscribe(value => {\r\n      this.router.navigate(['/']).then(r => {});\r\n    })\r\n  }\r\n\r\n  calculateDistanceAndTime(){\r\n    let directionsService = new google.maps.DirectionsService();\r\n\r\n    const funn = () => this.calculatePrice();\r\n\r\n    directionsService.route({\r\n        origin: {lat: this.origin.lat, lng: this.origin.lng},\r\n        destination: {lat: this.dest.lat, lng: this.dest.lng},\r\n        waypoints: [],\r\n        optimizeWaypoints: true,\r\n        travelMode: 'DRIVING'\r\n      },\r\n      function(response, status, f:Fun = funn) {\r\n        if (status !== 'OK') {\r\n          return;\r\n        } else {\r\n          var directionsData = response.routes[0].legs[0];\r\n          if (!directionsData) {\r\n            return;\r\n          }\r\n          else {\r\n            document.getElementById('duration').innerHTML = directionsData.duration.text;\r\n            document.getElementById('distance').innerHTML = directionsData.distance.text;\r\n\r\n            f();\r\n          }\r\n        }\r\n      })\r\n  }\r\n\r\n  calculatePrice(){\r\n    const distArr = document.getElementById('distance').innerText.split(\" \");\r\n    const distance = Number.parseFloat(distArr[0].replace(',','.'));\r\n    if(distance>2){\r\n      this.course.price = 5 + distance * 2;\r\n    }\r\n  }\r\n\r\n}\r\n","<section class=\"flex-column\">\r\n  <div>\r\n    <app-map-view [origin]=\"this.origin\" [destination]=\"this.dest\" [displayDirection]=\"this.displayDirections\"></app-map-view>\r\n  </div>\r\n  <div id=\"courseInfo\">\r\n    <ul class=\"nav\">\r\n      <li class=\"nav-item\">\r\n        <p>Czas przejazdu</p>\r\n        <p id=\"duration\"></p>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <p>Długość trasy</p>\r\n        <p id=\"distance\"></p>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <p>Cena za przejazd</p>\r\n        <p>{{course.price}} zł</p>\r\n      </li>\r\n    </ul>\r\n    <div id=\"button\">\r\n      <button (click)=\"saveCourse()\" type=\"button\" class=\"btn btn-secondary\">Zapisz kurs</button>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {faFacebook, faInstagram, faTwitter} from '@fortawesome/free-brands-svg-icons';\r\nimport {faEnvelope} from '@fortawesome/free-regular-svg-icons';\r\n\r\n@Component({\r\n  selector: 'footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"col-lg-12\" id=\"copyright\">\r\n  <p>Copyright</p>\r\n  <ul>\r\n    <li>Wojciech Kozioł</li>\r\n    <li>Aleksander Ciurej</li>\r\n    <li>Michał Kubis</li>\r\n  </ul>\r\n  <p>©2020</p>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"main\">\r\n  <app-main-view></app-main-view>\r\n  <app-links-bar></app-links-bar>\r\n  <footer></footer>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {faFacebook, faInstagram, faTwitter} from '@fortawesome/free-brands-svg-icons';\r\nimport {faEnvelope} from '@fortawesome/free-regular-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-links-bar',\r\n  templateUrl: './links-bar.component.html',\r\n  styleUrls: ['./links-bar.component.css']\r\n})\r\nexport class LinksBarComponent implements OnInit {\r\n  faFacebook = faFacebook;\r\n  faTwitter = faTwitter;\r\n  faEnvelope = faEnvelope;\r\n  faInstagram = faInstagram;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n\r\n","<div id=\"links\" class=\"col-lg-12\">\r\n  <ul class=\"row\" id=\"footer\">\r\n    <li class=\"col-sm-3\">\r\n      <a href=\"https://www.instagram.com\"> <fa-icon [icon]=\"faInstagram\"></fa-icon>   Instagram</a>\r\n    </li>\r\n    <li class=\"col-sm-3\">\r\n      <a href=\"https://www.gmail.com\"> <fa-icon [icon]=\"faEnvelope\"></fa-icon>   Email</a>\r\n    </li>\r\n    <li class=\"col-sm-3\">\r\n      <a href=\"https://www.twitter.com\"> <fa-icon [icon]=\"faTwitter\"></fa-icon>   Twitter</a>\r\n    </li>\r\n    <li class=\"col-sm-3\">\r\n      <a href=\"https://www.facebook.com\"> <fa-icon [icon]=\"faFacebook\"></fa-icon>   Facebook</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {AuthService} from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  respond: any;\r\n\r\n  formGroup = new FormGroup({\r\n    login: new FormControl(''),\r\n    password: new FormControl('')\r\n  })\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onSubmit() {\r\n    if(this.formGroup.value.login !== '' && this.formGroup.value.password !== '') {\r\n      this.authService.authenticate({\r\n        login: this.formGroup.value.login,\r\n        password: this.formGroup.value.password\r\n      })\r\n        .subscribe(value => {\r\n          this.respond = value;\r\n          if(this.respond){\r\n            location.reload();\r\n          }else{\r\n            document.getElementById('info').style.display = 'block';\r\n            document.getElementById('info').innerHTML = 'Złe hasło lub login';\r\n          }\r\n        })\r\n    }else{\r\n      document.getElementById('info').style.display = 'block';\r\n    }\r\n    }\r\n  }\r\n\r\n","<div id=\"loginMain\">\r\n    <form id=\"loginForm\" [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"login\" mat-dialog-title>Login/E-Mail</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"login\" formControlName=\"login\" placeholder=\"Enter Login\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\" mat-dialog-title>Hasło</label>\r\n        <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" placeholder=\"Password\">\r\n      </div>\r\n      <button type=\"submit\" [disabled]=\"!formGroup.valid\" class=\"btn btn-primary\">Zaloguj się</button>\r\n      <p id=\"info\">Puste pole</p>\r\n    </form>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'main-view-item-description-calculate-road',\r\n  templateUrl: './main-view-item-description-calculate-road.component.html',\r\n  styleUrls: ['./main-view-item-description-calculate-road.component.css']\r\n})\r\nexport class MainViewItemDescriptionCalculateRoadComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n}\r\n","<div>\r\n  <app-map></app-map>\r\n</div>\r\n\r\n\r\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'main-view-item-image',\r\n  templateUrl: './main-view-item-image.component.html',\r\n  styleUrls: ['./main-view-item-image.component.css']\r\n})\r\nexport class MainViewItemImageComponent implements OnInit {\r\n  @Input() icon: any;\r\n  constructor() {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<fa-icon [icon]=\"icon\" id=\"icon\"></fa-icon>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'main-view-item-text',\r\n  templateUrl: './main-view-item-text.component.html',\r\n  styleUrls: ['./main-view-item-text.component.css']\r\n})\r\nexport class MainViewItemTextComponent implements OnInit {\r\n  @Input() title:string;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p id=\"text\">\r\n  {{title}}\r\n</p>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {DataService} from '../../services/data.service';\r\nimport {faCar, faDollarSign, faRoute} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n@Component({\r\n  selector: 'app-main-view',\r\n  templateUrl: './main-view.component.html',\r\n  styleUrls: ['./main-view.component.css']\r\n})\r\nexport class MainViewComponent implements OnInit {\r\n  faCar = faCar;\r\n  faDollarSign = faDollarSign;\r\n  faRoute = faRoute;\r\n  login: String;\r\n\r\n  constructor( private authService: AuthService, private dataService: DataService) {\r\n  }\r\n  ngOnInit(): void {\r\n    this.getAllCoursesByUser()\r\n    this.isLoggedIn();\r\n  }\r\n\r\n  getAllCoursesByUser(){\r\n    this.login = this.authService.getLogin();\r\n    this.dataService.getByUser(this.login).subscribe(value => {\r\n    })\r\n  }\r\n  shouldShowLogin(): boolean{\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  isLoggedIn(){\r\n    if(!this.authService.isLoggedIn()){\r\n      document.getElementById('userLoggedDiv').style.display = 'none';\r\n    }else {\r\n      document.getElementById('userNotLoggedDiv').style.display = 'none';\r\n    }\r\n  }\r\n}\r\n","<div class=\"container-fluid\" id=\"mainViewComponent\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-4 col-md-4 col-sm-4 col-xl-4\" id=\"userNotLoggedDiv\">\r\n      <p>Zaloguj się aby przeglądać zawartość</p>\r\n    </div>\r\n\r\n    <div class=\"col-lg-4 col-md-4 col-sm-4 col-xl-4\" id=\"userLoggedDiv\">\r\n      <div class=\"center\">\r\n        <main-view-item-image [icon]=\"faCar\"></main-view-item-image>\r\n        <br>\r\n        <main-view-item-text title=\"Przejazdy\"></main-view-item-text>\r\n      </div>\r\n\r\n      <div>\r\n        <p>Wybierz miejsce docelowe oraz miejsce odbioru</p>\r\n        <main-view-item-description-calculate-road></main-view-item-description-calculate-road>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"col-lg-4 col-md-4 col-sm-4 col-xl-4\" id=\"border\">\r\n      <div>\r\n        <div class=\"center\">\r\n          <main-view-item-image [icon]=\"faRoute\"></main-view-item-image>\r\n          <br>\r\n          <main-view-item-text title=\"O nas\"></main-view-item-text>\r\n        </div>\r\n        <p>Projekt aplikacji wzorowany na aplikacji Uber. Stworzony na potrzeby zaliczenia projektu.</p>\r\n        <p>Wykonawcy:</p>\r\n        <p>Aleksander Ciurej</p>\r\n        <p>Wojciech Kozioł</p>\r\n        <p>Michał Kubis</p>\r\n      </div>\r\n      <div>\r\n        <div id=\"userCourse\">\r\n          <p class=\"userName\" *ngIf=\"shouldShowLogin()\">Witaj, {{login}} twoje ostatnie kursy:</p>\r\n          <app-user-courses *ngIf=\"shouldShowLogin()\" [user]=\"login\"></app-user-courses>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"col-lg-4 col-md-4 col-sm-4 col-xl-4\">\r\n      <div class=\"center\">\r\n        <main-view-item-image [icon]=\"faDollarSign\"></main-view-item-image>\r\n        <br>\r\n        <main-view-item-text title=\"Ostatnie kursy\"></main-view-item-text>\r\n      </div>\r\n\r\n      <div class=\"d-flex flex-column\">\r\n        <app-user-courses></app-user-courses>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input,   } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-map-view',\r\n  templateUrl: './map-view.component.html',\r\n  styleUrls: ['./map-view.component.css']\r\n})\r\nexport class MapViewComponent implements OnInit {\r\n\r\n  @Input() origin: any;\r\n  @Input() destination: any;\r\n  @Input() displayDirection: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n  <agm-map [latitude]=\"origin.latitude\" [longitude]=\"origin.longitude\"\r\n           [streetViewControl]=\"false\" [scrollwheel]=\"false\" [disableDefaultUI]=\"true\"\r\n           [draggable]=\"false\" [mapTypeControl]=\"false\" [fitBounds]=\"true\">\r\n    <agm-direction *ngIf=\"displayDirection\" [origin]=\"this.origin\" [destination]=\"this.destination\"></agm-direction>\r\n    <agm-marker [longitude]=\"origin.longitude\" [latitude]=\"origin.latitude\" [agmFitBounds]=\"true\"></agm-marker>\r\n    <agm-marker [longitude]=\"destination.longitude\" [latitude]=\"destination.latitude\" [agmFitBounds]=\"true\"></agm-marker>\r\n  </agm-map>\r\n</div>\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {Location} from '@angular-material-extensions/google-maps-autocomplete';\r\nimport {Router} from '@angular/router';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {Course} from '../../services/data.service';\r\nimport {AuthNotLoginGuard} from \"../../services/auth-not-login.guard\";\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css']\r\n})\r\n\r\nexport class MapComponent implements OnInit {\r\n  @Output() markerEvent = new EventEmitter<object>();\r\n  adres_poczatkowy = \"Skąd:\"\r\n  adres_koncowy = \"Dokąd:\"\r\n  default_adres = \"Twoja lokalizacja jest aktualnie ustawiona\";\r\n\r\n  //---------------------------------------------\r\n  origin = {\r\n    lat: 50.024230,\r\n    lng: 20.971066\r\n  };\r\n  destination = {\r\n    lat: 50.024230,\r\n    lng: 20.971066\r\n  };\r\n  //----------------------------------------------\r\n\r\n  course: Course\r\n  fromInput: boolean = false;\r\n  destInput: boolean = false;\r\n\r\n  constructor(private authService: AuthService, private router: Router,private authNotLoginGuard: AuthNotLoginGuard) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.setCurrentPosition();\r\n    this.course = {\r\n      origin: 'ssss',\r\n      destination: '',\r\n      price: 0,\r\n      userName: '',\r\n    }\r\n  }\r\n\r\n  sendData(): void{\r\n    this.authNotLoginGuard.selectedCourse = true;\r\n    this.course.userName = this.authService.getLogin();\r\n    this.router.navigate(['/course'], {state: {data: {origin: this.origin, dest: this.destination, course: this.course}}}).then(r => {});\r\n  }\r\n\r\n  private setCurrentPosition() {\r\n    if ('geolocation' in navigator) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        this.origin.lat = position.coords.latitude;\r\n        this.origin.lng = position.coords.longitude;\r\n      });\r\n    }\r\n  }\r\n  onLocationSelected(location: Location) {\r\n    this.origin.lat = location.latitude;\r\n    this.origin.lng = location.longitude;\r\n  }\r\n\r\n  onDestinationLocationSelected(location: Location) {\r\n    this.destination.lat = location.latitude;\r\n    this.destination.lng = location.longitude;\r\n  }\r\n\r\n  onAutocompleteSelected($event: google.maps.places.PlaceResult) {\r\n    this.course.origin = $event.formatted_address\r\n    this.fromInput = true;\r\n  }\r\n\r\n  onAutocompleteDestinationSelected($event: google.maps.places.PlaceResult) {\r\n    this.course.destination = $event.formatted_address\r\n    this.destInput = true;\r\n  }\r\n\r\n  isDisabled(): boolean {\r\n    return (this.fromInput === true && this.destInput === true);\r\n  }\r\n}\r\n","<div id=\"width\">\r\n  <mat-card-content class=\"autocomplete-container\">\r\n    <mat-google-maps-autocomplete [country]=\"['pl']\"\r\n                                  (onLocationSelected)=\"onLocationSelected($event)\"\r\n                                  [addressLabelText]=\"adres_poczatkowy\"\r\n                                  [placeholderText]=\"default_adres\"\r\n                                  (onAutocompleteSelected)=\"onAutocompleteSelected($event)\">\r\n    </mat-google-maps-autocomplete>\r\n  </mat-card-content>\r\n  <mat-card-content class=\"autocomplete-container\">\r\n    <mat-google-maps-autocomplete (onLocationSelected)=\"onDestinationLocationSelected($event)\"\r\n                                  [addressLabelText]=\"adres_koncowy\"\r\n    (onAutocompleteSelected)=\"onAutocompleteDestinationSelected($event)\"\r\n                                  [country]=\"['pl']\">\r\n    </mat-google-maps-autocomplete>\r\n  </mat-card-content>\r\n  <button type=\"button\" class=\"btn btn-dark\" (click)=\"sendData()\" *ngIf=\"isDisabled()\">Jedziemy!</button>\r\n</div>\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {Router} from '@angular/router';\r\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\r\nimport {LoginComponent} from \"../login/login.component\";\r\nimport {SignupComponent} from \"../signup/signup.component\";\r\n\r\n@Component({\r\n  selector: 'navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor( private authService: AuthService, private router: Router, private dialog: MatDialog) { }\r\n\r\n  openLoginDialog(){\r\n    this.dialog.open(LoginComponent, {\r\n      height: '400px',\r\n      width: '460px',\r\n    });\r\n  }\r\n\r\n  openSignUpDialog(){\r\n    this.dialog.open(SignupComponent,{\r\n      height: '600px',\r\n      width: '640px',\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  isLoggedIn(){\r\n    return this.authService.isLoggedIn();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout().subscribe(value => {this.router.navigate(['/']).then(r => {location.reload()})});\r\n  }\r\n}\r\n","<nav class=\"col-lg-12\">\r\n  <ul class=\"nav\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link\" [routerLink]=\"['/']\">Strona główna</a>\r\n    </li>\r\n    <li class=\"nav-item\" *ngIf=\"!isLoggedIn()\">\r\n      <a class=\"nav-link\" (click)=\"openLoginDialog()\">Zaloguj się</a>\r\n    </li>\r\n    <li class=\"nav-item\" *ngIf=\"!isLoggedIn()\">\r\n      <a class=\"nav-link\" (click)=\"openSignUpDialog()\">Zarejestruj się</a>\r\n    </li>\r\n    <li class=\"nav-item\" *ngIf=\"isLoggedIn()\">\r\n      <a href='#' class=\"nav-link\" id=\"logoutBtn\" (click)=\"logout()\">Wyloguj się</a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {AuthService} from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  respond: any;\r\n\r\n  formGroup = new FormGroup({\r\n    login: new FormControl(''),\r\n    email: new FormControl(''),\r\n    password: new FormControl(''),\r\n    repeatedPassword: new FormControl(''),\r\n  });\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onSubmit() {\r\n    if(this.formGroup.value.password === this.formGroup.value.repeatedPassword && this.formGroup.value.login !== '' && this.formGroup.value.email !== ''){\r\n      this.authService.createOrUpdate({\r\n        name: this.formGroup.value.login,\r\n        email: this.formGroup.value.email,\r\n        password: this.formGroup.value.password,\r\n      }).subscribe((value => {\r\n        this.respond = value;\r\n        if(this.respond.error !==undefined ){\r\n          document.getElementById('info').innerHTML = 'Taki użytkownik już istnieje';\r\n          document.getElementById('info').style.display = 'block';\r\n        }else{\r\n          document.getElementById('info').style.display = 'block';\r\n          document.getElementById('info').innerHTML = 'Pomyślnie zarejestrowano';\r\n          document.getElementById('info').style.color = 'green';\r\n          setTimeout(() => {\r\n            location.reload();\r\n          }, 2000);\r\n        }\r\n      }))\r\n    }else{\r\n      document.getElementById('info').innerHTML = 'Puste pole';\r\n      document.getElementById('info').style.display = 'block';\r\n    }\r\n\r\n  }\r\n}\r\n","<div id=\"signUpMain\">\r\n    <form id=\"signUpForm\" [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit()\" mat-dialog-content>\r\n      <div class=\"form-group\">\r\n        <label for=\"loginSignUp\">Login</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"loginSignUp\" formControlName=\"login\" placeholder=\"Wprowadź login\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"emailSignUp\">Adres e-mail</label>\r\n        <input type=\"email\" class=\"form-control\" id=\"emailSignUp\" formControlName=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Wprowadź email\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"passwordSignUp\">Hasło</label>\r\n        <input type=\"password\" class=\"form-control\" id=\"passwordSignUp\" formControlName=\"password\" placeholder=\"Podaj hasło\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"passwordSignUpRepeat\">Powtórz hasło</label>\r\n        <input type=\"password\" class=\"form-control\" id=\"passwordSignUpRepeat\" formControlName=\"repeatedPassword\" placeholder=\"Powtórz hasło\">\r\n      </div>\r\n      <button type=\"submit\" [disabled]=\"!formGroup.valid\" class=\"btn btn-primary\">Zarejestruj się</button>\r\n      <p id=\"info\"></p>\r\n    </form>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport {Course, DataService} from '../../services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-user-courses',\r\n  templateUrl: './user-courses.component.html',\r\n  styleUrls: ['./user-courses.component.css']\r\n})\r\nexport class UserCoursesComponent implements OnInit {\r\n  courses: Course[];\r\n  @Input() user: String;\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    if(this.user == undefined){\r\n      this.dataService.getAll().subscribe(value => this.setCourses(value, 10))\r\n    }else{\r\n      this.dataService.getByUser(this.user).subscribe(value => this.setCourses(value, 5))\r\n    }\r\n\r\n  }\r\n\r\n  setCourses(value: any, max: number): void{\r\n    this.courses = value\r\n    this.courses = this.courses.reverse();\r\n\r\n    const isMoreThan20 = this.courses.length - max > 0;\r\n\r\n    if(isMoreThan20){\r\n      for(let i=0; this.courses.length != max; i++){\r\n        this.courses.pop();\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<div>\r\n  <ul>\r\n    <li *ngFor=\"let course of courses\">\r\n        <span class=\"col-6\">\r\n          Z: {{course.origin}}\r\n        </span>\r\n        <span class=\"col-6\">\r\n          Do: {{course.destination}}\r\n        </span>\r\n        <p>\r\n          Cena przejazdu: {{course.price}}zł\r\n        </p>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import {Directive, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\r\nimport {GoogleMapsAPIWrapper} from '@agm/core';\r\n\r\nexport interface ILatLng {\r\n  latitude: number;\r\n  longitude: number;\r\n}\r\n\r\ndeclare var google: any;\r\n\r\n@Directive({\r\n  selector: '[appDirectionsMap]'\r\n})\r\nexport class DirectionsMapDirective implements OnInit, OnChanges {\r\n  @Input() origin: ILatLng;\r\n  @Input() destination: ILatLng;\r\n  @Input() showDirection: boolean;\r\n\r\n  private directionsRenderer: any;\r\n\r\n  constructor(private gmapsApi: GoogleMapsAPIWrapper) {}\r\n\r\n  ngOnInit() {\r\n    this.drawDirectionsRoute();\r\n  }\r\n\r\n  drawDirectionsRoute() {\r\n    this.gmapsApi.getNativeMap().then(map => {\r\n      if (!this.directionsRenderer) {\r\n        this.directionsRenderer = new google.maps.DirectionsRenderer({suppressMarkers: true});\r\n      }\r\n      const directionsRenderer = this.directionsRenderer;\r\n\r\n      if ( this.showDirection && this.destination ) {\r\n        const directionsService = new google.maps.DirectionsService;\r\n        directionsRenderer.setMap(map);\r\n        directionsService.route({\r\n          origin: {lat: this.origin.latitude, lng: this.origin.longitude},\r\n          destination: {lat: this.destination.latitude, lng: this.destination.longitude},\r\n          waypoints: [],\r\n          optimizeWaypoints: true,\r\n          travelMode: 'DRIVING'\r\n        }, (response, status) => {\r\n          if (status === 'OK') {\r\n            let directionsData = response.routes[0].legs[0]; // Get data about the mapped route\r\n            if (!directionsData) {\r\n              return;\r\n            }\r\n            else {\r\n              console.log(directionsData.distance.text)\r\n            }\r\n          } else {\r\n            console.log('Directions request failed due to ' + status);\r\n          }\r\n        });\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.destination || changes.showDirection) {\r\n      if (changes.showDirection && !changes.showDirection.currentValue) {\r\n        if (this.directionsRenderer !== undefined) { // check this value is not undefined\r\n          this.directionsRenderer.setDirections({routes: []});\r\n          return;\r\n        }\r\n      } else {\r\n        this.drawDirectionsRoute();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {AuthService} from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthNotLoginGuard implements CanActivate {\r\n  constructor(private router: Router, private authService: AuthService) {\r\n  }\r\n\r\n  selectedCourse = false;\r\n\r\n  canActivate(){\r\n    if(this.authService.isLoggedIn() && this.selectedCourse){\r\n      return true;\r\n    }else{\r\n      this.router.navigate(['']);\r\n    }\r\n  }\r\n}\r\n","import {Injectable, Injector} from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\n\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {AuthService} from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private injector: Injector) {\r\n  }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    const auth = this.injector.get(AuthService);\r\n    request = request.clone({\r\n      setHeaders: {\r\n   \t'x-auth-token': `${auth.getToken()}`\r\n  }\r\n  });\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\nimport {Token} from '../models/token';\r\nimport {JwtHelper} from 'angular2-jwt';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private url = 'https://uber-ac-wk-mk.herokuapp.com/api';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  authenticate(credentials) {\r\n    return this.http.post(this.url + '/user/auth', {\r\n      login: credentials.login,\r\n      password: credentials.password\r\n    }).pipe(\r\n      map((result: Token) => {\r\n        if (result && result.token) {\r\n          localStorage.setItem('token', result.token);\r\n          localStorage.setItem('login', credentials.login)\r\n          return true;\r\n        }\r\n        return false;\r\n      })\r\n    );\r\n  }\r\n\r\n  createOrUpdate(credentials) {\r\n    return this.http.post(this.url + '/user/create', credentials);\r\n  }\r\n\r\n  logout() {\r\n    return this.http.delete(this.url + '/user/logout/' + this.currentUser.userId)\r\n      .pipe(\r\n        map(() => {\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('login');\r\n        })\r\n      );\r\n  }\r\n\r\n  isLoggedIn() {\r\n    const jwtHelper = new JwtHelper();\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      return false;\r\n    }\r\n    return !(jwtHelper.isTokenExpired(token));\r\n  }\r\n\r\n  get currentUser() {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      return null;\r\n    }\r\n\r\n    return new JwtHelper().decodeToken(token);\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  getLogin(){\r\n    return localStorage.getItem('login');\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nexport interface Course{\r\n  origin: String,\r\n  destination: String,\r\n  price: Number,\r\n  userName: String,\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  private url = 'https://uber-ac-wk-mk.herokuapp.com/api';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll() {\r\n    return this.http.get(this.url + '/courses');\r\n  }\r\n\r\n  getByUser(userName) {\r\n    return this.http.get(this.url + '/courses/' + userName);\r\n  }\r\n\r\n  createOrUpdate(course) {\r\n    return this.http.post(`${this.url}/courses`, course);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiKey: 'AIzaSyBofizu88fnCrnywU1ks1ioo740pE4x-sE'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}